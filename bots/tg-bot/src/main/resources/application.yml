spring:
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASS:guest}
    tg-bot-callback:
      exchange: callback-tg-bot-exchange
      storage: callback.tg.bot.storage
      dlx: callback-tg-bot-dlx
      dlq-storage: callback.tg.bot.dlq.storage
      queue: callback.tg.bot.current
      dlq: callback.tg.bot.dlq.current
    ready-post:
      exchange: post-ready-exchange
      storage: post.ready.storage
      queue: post.ready.tg
      dlx: post-ready-dlx
      dlq-storage: post.ready.dlq.storage
      dlq: post.ready.dlq.tg
    ad-post:
      exchange: post-ad-exchange
      storage: post.ad.storage
      queue: post.ad.tg
      dlx: post-ad-dlx
      dlq-storage: post.ad.dlq.storage
      dlq: post.ad.dlq.tg
  liquibase:
    contexts: tg-bot,data
  jpa:
    hibernate.ddl-auto: validate
tg:
  bot:
    webHookPath: ${TG_BOT_WEB_HOOK_PATH}
    username: ${TG_BOT_USERNAME}
    token: ${TG_BOT_TOKEN}
feign:
  analyzer:
    url: ${ANALYZER_URL:http://localhost:8010/}
bot:
  session:
    messenger:
      maxQueryCountPerTime: 1
      maxQuerySizeInBatch: 30
