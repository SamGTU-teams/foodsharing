CREATE TABLE public.region (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(63) NOT NULL,
    lat DOUBLE PRECISION,
    lon DOUBLE PRECISION,
    CONSTRAINT PK_REGION PRIMARY KEY (id)
);

CREATE TABLE public.category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(63) NOT NULL,
    CONSTRAINT PK_CATEGORY PRIMARY KEY (id)
);

CREATE TABLE public.product (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(63) NOT NULL,
    category_id BIGINT,
    CONSTRAINT PK_PRODUCT PRIMARY KEY (id)
);

ALTER TABLE public.region ADD CONSTRAINT UQ_REGION_NAME UNIQUE (name);

ALTER TABLE public.category ADD CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name);

ALTER TABLE public.product ADD CONSTRAINT UQ_PRODUCT_NAME UNIQUE (name);
ALTER TABLE public.product ADD CONSTRAINT FK_PRODUCT_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES public.category (id);


CREATE SCHEMA IF NOT EXISTS vk_parser;

CREATE TABLE vk_parser."group" (
    id INTEGER NOT NULL,
    server_id INTEGER,
    access_token VARCHAR(255),
    secret_key VARCHAR(255),
    confirmation_code VARCHAR(255) NOT NULL,
    CONSTRAINT PK_GROUP PRIMARY KEY (id)
);

CREATE TABLE vk_parser.group_regions (
    group_id INTEGER NOT NULL,
    region_id BIGINT NOT NULL,
    CONSTRAINT PK_GROUP_REGIONS PRIMARY KEY (group_id, region_id)
);

ALTER TABLE vk_parser.group_regions ADD CONSTRAINT FK_VK_GROUP_REGIONS_GROUP FOREIGN KEY (group_id) REFERENCES vk_parser."group" (id);
ALTER TABLE vk_parser.group_regions ADD CONSTRAINT FK_VK_GROUP_REGIONS_REGION FOREIGN KEY (region_id) REFERENCES public.region (id);
